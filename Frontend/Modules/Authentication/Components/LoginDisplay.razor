@using CIPP.Frontend.Modules.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation

<AuthorizeView>
    <Authorized>
        <div class="d-flex align-center">
            <MudText Typo="Typo.body2" Class="mr-2">
                Welcome, @(GetDisplayName(context.User))
            </MudText>
            <MudButton Variant="Variant.Text" 
                      Color="Color.Inherit" 
                      StartIcon="Icons.Material.Filled.Logout"
                      OnClick="SignOutAsync">
                Sign out
            </MudButton>
        </div>
    </Authorized>
    <NotAuthorized>
        <MudButton Variant="Variant.Text" 
                  Color="Color.Inherit" 
                  StartIcon="Icons.Material.Filled.Login"
                  OnClick="SignInAsync">
            Sign in
        </MudButton>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string GetDisplayName(System.Security.Claims.ClaimsPrincipal user) {
        var displayName = user.FindFirst("name")?.Value ??
                         user.FindFirst("preferred_username")?.Value ??
                         user.Identity?.Name ??
                         "User";
        
        return displayName.Split(separator: ' ').FirstOrDefault() ?? "User";
    }

    private async Task SignInAsync() {
        await AuthService.SignInAsync();
    }

    private async Task SignOutAsync() {
        await AuthService.SignOutAsync();
    }
}
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: cipp-postgres
    environment:
      POSTGRES_DB: cipp
      POSTGRES_USER: cipp
      POSTGRES_PASSWORD: cipp123!
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - cipp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cipp -d cipp"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # Redis Cache & Message Queue
  redis:
    image: redis:7-alpine
    container_name: cipp-redis
    command: redis-server --appendonly yes --requirepass cipp123!
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - cipp-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # CIPP API
  cipp-api:
    build:
      context: .
      dockerfile: Api/Dockerfile
    container_name: cipp-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=cipp;Username=cipp;Password=cipp123!;
      - ConnectionStrings__Redis=redis:6379,password=cipp123!
      - Authentication__AzureAd__TenantId=your-tenant-id
      - Authentication__AzureAd__ClientId=your-client-id
      - Authentication__AzureAd__Audience=api://your-api-audience
      - Authentication__AzureAd__Scope=api://your-api-scope
      - Serilog__MinimumLevel=Information
      - Hangfire__WorkerCount=2
    ports:
      - "7000:8080"
    networks:
      - cipp-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # CIPP Frontend
  cipp-frontend:
    build:
      context: .
      dockerfile: Frontend/Dockerfile
    container_name: cipp-frontend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - Authentication__AzureAd__TenantId=your-tenant-id
      - Authentication__AzureAd__ClientId=your-frontend-client-id
      - Authentication__AzureAd__CallbackPath=/signin-oidc
      - DownstreamApi__BaseUrl=http://cipp-api:8080
      - ApiSettings__Timeout=30
      - Serilog__MinimumLevel=Information
    ports:
      - "7001:8080"
    networks:
      - cipp-network
    depends_on:
      cipp-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

networks:
  cipp-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local